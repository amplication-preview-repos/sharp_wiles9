datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Question {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  text        String?
  codeSnippet String?
  answers     Answer[]
  test        Test?    @relation(fields: [testId], references: [id])
  testId      String?
}

model Answer {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  text       String?
  isCorrect  Boolean?
  question   Question? @relation(fields: [questionId], references: [id])
  questionId String?
}

model Result {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  score     Int?
  feedback  String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  test      Test?    @relation(fields: [testId], references: [id])
  testId    String?
}

model Test {
  id              String                   @id @default(cuid())
  createdAt       DateTime                 @default(now())
  updatedAt       DateTime                 @updatedAt
  name            String?
  image           Json?
  tags            EnumTestTags[]
  difficultyLevel EnumTestDifficultyLevel?
  questions       Question[]
  results         Result[]
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String?
  lastName  String?
  username  String   @unique
  email     String?  @unique
  password  String
  roles     Json
  results   Result[]
}

enum EnumTestTags {
  Option1
}

enum EnumTestDifficultyLevel {
  Option1
}
